Sorting Algorithms: Sorting algorithms arrange a collection of elements in a specific order, such as alphabetical or numerical. Examples include quicksort, mergesort, heapsort, and insertion sort.
Search Algorithms: Search algorithms locate a specific element or value within a collection. Common search algorithms include binary search, linear search, and hash-based search.
Graph Algorithms: Graph algorithms analyze relationships and connectivity within a graph data structure. Examples include breadth-first search (BFS), depth-first search (DFS), Dijkstra's algorithm, and Kruskal's algorithm for minimum spanning trees.
Dynamic Programming: Dynamic programming breaks down a complex problem into overlapping subproblems and solves them iteratively, storing solutions in a table for efficiency. It is often used to optimize recursive algorithms and solve problems like the knapsack problem or the Fibonacci sequence.
Divide and Conquer: Divide and conquer algorithms split a problem into smaller subproblems, solve them independently, and then combine the results. Common examples include the merge sort algorithm and the binary search algorithm.
Greedy Algorithms: Greedy algorithms make locally optimal choices at each step with the hope of finding a global optimum. Examples include the greedy algorithms for minimum spanning trees (Prim's algorithm and Kruskal's algorithm) and the Dijkstra's algorithm for shortest paths.
Backtracking Algorithms: Backtracking algorithms explore all possible solutions by incrementally building candidates and backtracking when a solution is not viable. Examples include the N-queens problem and the Sudoku solver.
String Matching Algorithms: String matching algorithms search for occurrences of a pattern within a larger text. Common algorithms include the Knuth-Morris-Pratt (KMP) algorithm, the Boyer-Moore algorithm, and the Rabin-Karp algorithm.
Hashing: Hashing algorithms map data to a fixed-size hash value, enabling efficient retrieval and storage. Examples include the hash functions used in hash tables, cryptographic hash functions like MD5 and SHA-1, and bloom filters.
Approximation Algorithms: Approximation algorithms provide fast and practical solutions to optimization problems, offering an approximation to the optimal solution with a guaranteed level of accuracy. Examples include the greedy algorithm for the traveling salesman problem and the approximation algorithm for the set cover problem.